# RFC: R-Type Server Protocol 2023



> Introduction

This document outlines the server protocol for the R-Type project at EPITECH.
It defines the communication standards for clients interacting with the server and establishes the data transmission format.



> Protocol Overview

The server operates under a client-server model, processing game logic and maintaining authoritative game state.
Clients connect via UDP using the defined protocol to engage in gameplay.

### Key Terms

The terms "MUST", "MUST NOT", "REQUIRED", "SHALL", and "OPTIONAL" have meanings ascribed in RFC 2119.

> UDP Server Connection

Upon a successful TCP connection and server retrieval, clients MUST initiate a UDP connection to the server using the provided address and port.

### Server Response Format
<IP_address>;<port>


> UDP Protocol Structure

Communications utilize a structured payload consisting of a status code and data packet. The format MUST adhere to the following:

char CODE;
DataNet;


> DataNet Structure

DataNet is a serialized data object encapsulating the necessary information for game state communication.

struct DataNet {
// data in binary
};


> Server Commands and Communications

The server protocol supports various commands for game operations:

- Player connection and initialization
- Game state updates
- Player actions processing


> Conventions

- Enumerations for server response codes
- Serialization for data transmission
- Error handling and acknowledgments


> Conclusion

This document serves as the foundation for the server-client communication within the R-Type project,
facilitating gameplay and ensuring smooth data exchange.

Generated by Epitech 2023 - Project R-Type

Guillaume LE COZ
Victor M. SMITH
Paul ANCEY
Neil AYEB
Bryan ZAKKA